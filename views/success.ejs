<!-- Include necessary libraries and CSS -->
<link
  rel="stylesheet"
  href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
/>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- Include a Bootstrap CSS class for styling -->
<style>
  .checkout__input__checkbox {
    margin-bottom: 20px;
  }
</style>

<!-- Start of HTML -->
<section class="hero" style="height: 100vh"><%- include('hero.ejs') %></section>
<section class="checkout spad">
  <div class="container">
    <div class="checkout__form">
      <h4 class="success">Your order has been recieved</h4>

      <div class="row">
        <div class="col-lg-12">
          <div class="checkout__order">
            <h4>Order: <%= salesDetails.invoiceNumber %></h4>
            <div class="checkout__order__products">
              <ul>
                <% salesItems.forEach(item => { %>
                <li><%= item.name %></li>
                <% }); %>
              </ul>
              <!-- To be delivered by: -->
            </div>
            <ul id="cartItemList">
              <!-- Cart items will be dynamically added here -->
            </ul>
            <div class="checkout__order__total">
              Payment method
              <span><%= paymentDetail.paymentMethod %></span>
              <br />
              Payment confirmation:
              <span><%= paymentDetail.referenceNumber %></span>
              <br />
              Account Number:
              <span><%= paymentDetail.accountNumber %></span>
              <br />
              Total <span>KES <%= salesDetails.totalCost %></span>
              <hr />
              Delivery Status: <span><%= salesDetails.status %></span>
              <br />
              Order Time: <span><%= salesDetails.createdAt %></span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<script>
  $(document).ready(function () {
    function togglePaymentFields() {
      const mpesaPhoneNumberField = $("#mpesaPhoneNumberField");
      const cardPaymentsField = $("#cardPaymentsField");
      const payment1Checkbox = $("#payment1");
      const payment2Checkbox = $("#payment2");

      if (payment1Checkbox.prop("checked")) {
        mpesaPhoneNumberField.show();
        cardPaymentsField.hide();
        payment2Checkbox.prop("checked", false);
      } else if (payment2Checkbox.prop("checked")) {
        mpesaPhoneNumberField.hide();
        cardPaymentsField.show();
        payment1Checkbox.prop("checked", false);
      } else {
        mpesaPhoneNumberField.hide();
        cardPaymentsField.hide();
      }

      //Mpesa payment code
      const payButton = $("#payButton");

      // Add a click event listener to the "Pay" button
      payButton.click(function () {
        // Get the Mpesa phone number value
        const mpesaPhoneNumber = $("#mpesaPhoneNumber").val();

        // Create a JSON object with the Mpesa phone number and cartItems
        let totalPrice = 0;
        storedCartItems.forEach((item) => {
          totalPrice += item.price * item.quantity;
        });

        // Create a JSON object with the Mpesa phone number, cart items, and total amount
        const paymentData = {
          mpesa_phone_number: mpesaPhoneNumber,
          cartItems: storedCartItems, // Assuming storedCartItems contains the cart items
          total: totalPrice.toFixed(2), // Format total as a string with two decimal places
        };

        // Send a POST request to the /api/payments/mpesa endpoint
        $.ajax({
          type: "POST",
          url: "/api/payments/mpesa", // Update with your actual API endpoint
          data: JSON.stringify(paymentData),
          contentType: "application/json",
          success: function (response) {
            // Handle the success response here
            console.log("Payment success:", response);
            alert(response.phone);
            // You can also show a success message or redirect the user as needed
          },
          error: function (error) {
            // Handle the error response here
            console.error("Payment error:", error);
            // You can display an error message to the user if needed
          },
        });
      });
    }

    // Event handler for payment method checkbox changes
    $("input[name='payment_method']").change(function () {
      togglePaymentFields();
    });

    // Initial toggle when the page loads
    togglePaymentFields();

    const storedCartItems = JSON.parse(localStorage.getItem("cartItems")) || [];
    const cartItemList = document.getElementById("cartItemList");
    let totalPrice = 0;

    storedCartItems.forEach((item) => {
      const liElement = document.createElement("li");
      const itemTotalPrice = (item.price * item.quantity).toFixed(2);
      totalPrice += item.price * item.quantity;
      liElement.innerHTML = `${item.product_name} <span>KES ${itemTotalPrice}</span>`;
      cartItemList.appendChild(liElement);
    });

    const totalElement = document.querySelector(".checkout__order__total span");
    totalElement.textContent = `KES ${totalPrice.toFixed(2)}`;
  });
</script>
