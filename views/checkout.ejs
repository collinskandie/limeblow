<section class="hero"><%- include('hero.ejs') %></section>
<section class="checkout spad">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <h6>
          <span class="icon_tag_alt"></span> Have a coupon?
          <a href="#">Click here</a> to enter your code
        </h6>
      </div>
    </div>
    <div class="checkout__form">
      <h4>Billing Details</h4>
      <form method="POST" id="orderForm">
        <div class="row">
          <% console.log(userSessionExists); %> <% if (!userSessionExists) { %>
          <%- include('billingform.ejs') %> <% } %> <% if (userSessionExists) {
          %> <%- include('billingoptions.ejs') %> <% } %>
          <div class="col-lg-4 col-md-6">
            <div class="checkout__order">
              <h4>Your Order</h4>
              <div class="checkout__order__products">
                Products <span>Total</span>
              </div>
              <ul id="cartItemList">
                <!-- Cart items will be dynamically added here -->
              </ul>
              <div class="checkout__order__total">
                Total <span>KES 00.00</span>
              </div>
              Kindly pay via mpesa till then paste the mpesa confirmation code
              below
              <hr />
              Till: <strong>9698167</strong><br />
              Name: <strong>LIME BOW GIFTS</strong>
              <hr />
              <div class="checkout__input__checkbox">
                <label for="payment1">
                  Mpesa
                  <input
                    type="text"
                    id="payment1"
                    value="mpesa"
                    name="payment_method"
                  />
                  <span class="checkmark"></span>
                </label>
                <div class="checkout__input">
                  <p>Mpesa number<span>*</span></p>
                  <input
                    type="text"
                    name="mpesa_number"
                    id="mpesaNumberInput"
                    placeholder="0722000000"
                    required
                  />
                  <button type="button" id="sendMpesaDataBtn" class="site-btn">
                    Send Mpesa Data
                  </button>

                  <p hidden id="mpesaConfirmationTxt">
                    Mpesa Confirmation<span>*</span>
                  </p>
                  <input
                    type="text"
                    name="mpesa_confirmation"
                    id="mpesaConfirmationInput"
                    placeholder="XXXXXXXXXX"
                    required
                    readonly
                    hidden
                  />
                </div>
              </div>
              <button type="submit" id="placeOrderBtn" class="site-btn" hidden>
                PLACE ORDER
              </button>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
  <div
    class="toast"
    id="successToast"
    role="alert"
    aria-live="assertive"
    aria-atomic="true"
    data-autohide="true"
    data-delay="3000"
  >
    <div class="toast-header">
      <strong class="mr-auto">Success</strong>
      <button
        type="button"
        class="ml-2 mb-1 close"
        data-dismiss="toast"
        aria-label="Close"
      >
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <div class="toast-body">
      <!-- Toast message will be displayed here -->
    </div>
  </div>
</section>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  $(document).ready(function () {
    $("#sendMpesaDataBtn").click(function () {
      // Get the Mpesa number and cart total from the form
      const mpesaNumber = $("#mpesaNumberInput").val();
      const storedCartItems =
        JSON.parse(localStorage.getItem("cartItems")) || [];
      let totalPrice = 0;
      storedCartItems.forEach((item) => {
        totalPrice += item.price * item.quantity;
      });
      const cartTotal = totalPrice.toFixed(2);

      // Prepare the data to send to the server
      const requestData = {
        mpesaNumber,
        cartTotal,
      };

      $.ajax({
        type: "POST",
        url: "/api/payments/mpesa", // Replace with the actual API endpoint
        data: JSON.stringify(requestData),
        contentType: "application/json",
        success: function (response) {
          const transactionId = response.transactionId;
          const transactionMesssage = response.message;
          alert(transactionMesssage);
          // Function to check payment status
          function checkPaymentStatus() {
            $.ajax({
              type: "GET",
              url: `/api/payments/checkstatus/${transactionId}`, // Your callback endpoint
              success: function (res) {
                const paymentStatus = res.transStatus;
                const mpesaTrans = res.transactionId;
                const callbackResponse = res.success;
                if (paymentStatus === "Success") {
                  alert("Payment is successful");
                  console.log("Mpesa Callback Response:", callbackResponse);
                  const toastMessage = `Payment successful! Confirmation Code: ${callbackResponse}`;
                  showSuccessToast(toastMessage);
                  // Update the confirmation input field
                  $("#mpesaConfirmationInput")
                    .val(callbackResponse)
                    .removeAttr("hidden");
                  $("#mpesaConfirmationTxt")
                    // .val(response.confirmationCode)
                    .removeAttr("hidden");
                  // Hide the "Send Mpesa Data" button
                  $("#sendMpesaDataBtn").hide();
                  // Show the "PLACE ORDER" button
                  $("#placeOrderBtn").removeAttr("hidden");
                } else if (paymentStatus === "Error") {
                  // Handle error
                  alert("Error", mpesaTrans);
                  clearInterval(checkInterval);
                } else {
                  alert("Payment is still pending");
                  console.log("Payment is still pending");
                  // Payment is still pending, you can either continue checking or set a maximum limit
                  // and handle the pending case
                }
              },
              error: function (error) {
                console.error("Error fetching callback data:", error);
                // Handle the error, e.g., retry or display an error message
              },
            });
          }

          // Check the payment status every 5 seconds (adjust as needed)
          const checkInterval = setInterval(checkPaymentStatus, 10000);

          // You can set a maximum number of checks or use other conditions to exit the loop

          // Example: stop checking after 10 minutes (adjust as needed)
          setTimeout(function () {
            clearInterval(checkInterval);
            console.log("Stopped checking payment status");
          }, 600000); // 10 minutes in milliseconds
        },
        error: function (error) {
          console.error("Error:", error);
          // Show an error message
          alert("Payment failed. Please try again.");
        },
      });
    });

    // Function to show the success toast message
    function showSuccessToast(message) {
      const successToast = $("#successToast");
      const toastBody = successToast.find(".toast-body");
      toastBody.text(message);
      successToast.toast("show");
    }

    $("form").submit(function (event) {
      event.preventDefault(); // Prevent the default form submission

      // Serialize the form data
      var formData = {};
      var customData = {};
      $(this)
        .find("input, select")
        .each(function () {
          formData[$(this).attr("name")] = $(this).val();
        });
      const storedCartItems =
        JSON.parse(localStorage.getItem("cartItems")) || [];
      const custimaztionData =
        JSON.parse(localStorage.getItem("customizeFormData")) || [];
      const paymentData = {
        customization: custimaztionData, // Assuming custimaztionData contains the customization data
        cartItems: storedCartItems, // Assuming storedCartItems contains the cart items
        total: totalPrice.toFixed(2), // Format total as a string with two decimal places
      };
      // Merge the form data and payment data into one object
      const requestData = {
        ...formData,
        ...paymentData,
      };

      $.ajax({
        type: "POST",
        url: "/api/payments/confirmation",
        contentType: "application/json", // Set the content type to JSON
        data: JSON.stringify(requestData),
        success: function (response) {
          // Handle the success response here
          //console.log("Success:", response);
          const userId = response.user;
          console.log(userId);

          // Display the toast message
          var toastMessage = response.success; // Replace with the actual success message
          var successToast = document.getElementById("successToast");
          var toastBody = successToast.querySelector(".toast-body");
          toastBody.textContent = toastMessage;
          var toast = new bootstrap.Toast(successToast);
          toast.show();
          alert(response.success);
          localStorage.removeItem("cartItems");
          window.location.href = `/success/${userId}`;

          // You can optionally redirect the user or perform other actions after clearing the cartItems
        },
        error: function (error) {
          // Handle the error response here
          console.error("Error:", error);
          // You can display an error message to the user if needed
        },
      });
    });
  });
  const storedCartItems = JSON.parse(localStorage.getItem("cartItems")) || [];

  const cartItemList = document.getElementById("cartItemList");
  let totalPrice = 0;
  storedCartItems.forEach((item) => {
    const liElement = document.createElement("li");
    const itemTotalPrice = (item.price * item.quantity).toFixed(2);
    totalPrice += item.price * item.quantity;
    liElement.innerHTML = `${item.product_name} <span>KES ${itemTotalPrice}</span>`;
    cartItemList.appendChild(liElement);
  });
  const totalElement = document.querySelector(".checkout__order__total span");
  totalElement.textContent = `KES ${totalPrice.toFixed(2)}`;

  // Get references to the checkboxes
  const payment1Checkbox = document.getElementById("payment1");
  const payment2Checkbox = document.getElementById("payment2");

  // Add an event listener to each checkbox
  payment1Checkbox.addEventListener("change", function () {
    if (payment1Checkbox.checked) {
      // If the first checkbox is checked, uncheck the second one
      payment2Checkbox.checked = false;
    }
  });

  payment2Checkbox.addEventListener("change", function () {
    if (payment2Checkbox.checked) {
      // If the second checkbox is checked, uncheck the first one
      payment1Checkbox.checked = false;
    }
  });
</script>

<!-- </body> -->
